<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.diylc</groupId>
  <artifactId>diylc</artifactId>
  <version>4.0.0-rockola</version>
  <packaging>jar</packaging>

  <name>DIY Layout Creator</name>
  <url>https://github.com/rockola/diy-layout-creator</url>
  <description>Multiplatform circuit layout and schematic drawing tool</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- java.awt.Toolkit.getMenuShortcutKeyMaskEx() requires Java 10+ -->
    <!-- Java 11 is a LTS version -->
    <maven.compiler.release>8</maven.compiler.release>
    <!-- dependency properties -->
    <itext.version>RELEASE</itext.version>
    <checkstyle.config.location>google_checks.xml</checkstyle.config.location>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ca.mcgill.sable</groupId>
      <artifactId>soot</artifactId>
      <version>3.3.0</version>
    </dependency>
    <!-- Apache FreeMarker - HTML templates -->
    <!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.28</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-configuration2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <version>2.6</version>
    </dependency>
    <!-- apparently needed by commons-configuration -->
    <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.9.4</version>
    </dependency>
    <!-- Apache commons-io - I/O utilities -->
    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <!-- Apache commons-text - String utilities -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.8</version>
    </dependency>
    <!-- JAXB-api - XML (un)marshal -->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
    </dependency>
    <!-- JAXB-impl - XML (un)marshal -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>2.3.2</version>
    </dependency>
    <!-- JAXB-core - XML (un)marshal -->
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>2.3.0.1</version>
    </dependency>
    <!-- EventBus - simple event publish/subscribe framework -->
    <dependency>
      <groupId>org.greenrobot</groupId>
      <artifactId>eventbus</artifactId>
      <version>3.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.j2html</groupId>
      <artifactId>j2html</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.5.2</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.13.0</version>
    </dependency>
    <!-- xStream - old XML (un)marshal library -->
    <!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>4.1.1</version>
    </dependency>
    <dependency>
      <groupId>net.java.balloontip</groupId>
      <artifactId>balloontip</artifactId>
      <version>1.2.4.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.scijava/jep -->
    <dependency>
      <groupId>org.scijava</groupId>
      <artifactId>jep</artifactId>
      <version>2.4.2</version>
    </dependency>
    <!-- Apache PdfBox - PDF creation library -->
    <!-- https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox -->
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>2.0.13</version>
    </dependency>
    <!-- de.rototor.pdfbox.graphics2d - Apache PdfBox Graphics2D b ridge -->
    <dependency>
      <groupId>de.rototor.pdfbox</groupId>
      <artifactId>graphics2d</artifactId>
      <version>0.20</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.codehaus.jettison/jettison -->
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.4.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.11</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itext7-core</artifactId>
      <!-- <version>${itext.version}</version> -->
      <version>7.1.9</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>com.orsonpdf</groupId>
      <artifactId>orsonpdf</artifactId>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>4.3.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>28.1-jre</version>
    </dependency>
    <dependency>
      <groupId>com.atlassian.commonmark</groupId>
      <artifactId>commonmark</artifactId>
      <version>0.13.1</version>
    </dependency>
    <dependency>
      <groupId>org.abcl</groupId>
      <artifactId>abcl</artifactId>
      <version>1.6.0</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>diy-layout-creator</finalName>
    <plugins>
      <plugin>
	<!-- clean lifecycle, see
	     https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>
      <plugin>
	<!-- default lifecycle, jar packaging: see
	     https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      <!-- Java compiler plugin -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <compilerArgument>-Xlint:all</compilerArgument>
          <useIncrementalCompilation>false</useIncrementalCompilation>
	  <forceJavacCompilerUse>true</forceJavacCompilerUse>
        </configuration>
      </plugin>
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>3.0.0-M4</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
	<configuration>
	  <archive>
	    <manifest>
	      <addClasspath>true</addClasspath>
	      <mainClass>org.diylc.App</mainClass>
	      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
	      <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
	    </manifest>
	    <manifestEntries>
	      <SplashScreen-Image>/org/diylc/images/splash.png</SplashScreen-Image>
	    </manifestEntries>
	  </archive>
	</configuration>
      </plugin>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
      </plugin>
      <plugin>
	<!-- site lifecycle, see
	     https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <!-- run -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
	  <executable>java</executable>
	  <arguments>
	    <argument>-splash:target/classes/org/diylc/images/splash.png</argument>
	    <argument>-Xms512m</argument>
	    <argument>-Xmx2048m</argument>
	    <argument>-Dorg.diylc.scriptRun=true</argument>
	    <argument>-Dfile.encoding=true</argument>
	    <argument>-Dawt.useSystemAAFontSettings=on</argument>
	    <argument>-Dswing.aatext=true</argument>
	    <argument>-classpath</argument>
	    <classpath />
            <argument>org.diylc.App</argument>
	  </arguments>
        </configuration>
      </plugin>
      <!-- This plugin adds all dependencies to JAR file during 'package' command.
           Pay EXTRA attention to the 'mainClass' tag. 
           You have to set name of class with entry point to program ('main' method) -->
      <!--
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>org.diylc.App</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->
      <plugin>
	<artifactId>maven-shade-plugin</artifactId>
	<version>3.2.1</version>
	<executions>
	  <execution>
	    <phase>package</phase>
	    <goals>
	      <goal>shade</goal>
	    </goals>
	    <configuration>
	      <filters>
		<filter>
		  <artifact>*:*</artifact>
		  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
		  </excludes>
		</filter>
	      </filters>
	      <!-- <minimizeJar>true</minimizeJar> -->
	      <shadedArtifactAttached>true</shadedArtifactAttached>
	      <transformers>
		<transformer implementation=
			     "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		  <manifestEntries>
                    <Main-Class>org.diylc.App</Main-Class>
		  </manifestEntries>
		</transformer>
	      </transformers>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>com.github.spotbugs</groupId>
	<artifactId>spotbugs-maven-plugin</artifactId>
	<version>3.1.12.2</version>
	<dependencies>
	  <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
	  <dependency>
	    <groupId>com.github.spotbugs</groupId>
	    <artifactId>spotbugs</artifactId>
	    <version>4.0.0-beta4</version>
	  </dependency>
	</dependencies>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/filtered-resources</directory>
	<filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
	<filtering>false</filtering>
      </resource>
    </resources>
  </build>
  <reporting>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-checkstyle-plugin</artifactId>
	<version>3.1.0</version>
	<configuration>
	  <!-- this is only read used checkstyle:check -->
	  <!-- checkstyle:checkstyle uses checkstyle.config.location set in properties -->
	  <configLocation>google_checks.xml</configLocation>
	</configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>	
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
	<version>3.1.1</version>
	<configuration>
	  <!-- NOTE: javadoc is in /usr/bin on Ubuntu, setting ${java.home} to /usr 
	       would work here, but would it make sense?
	       Anyway, do change this to ${java.home}/bin/javadoc if that
	       works better for you.
	  -->
	  <javadocExecutable>/usr/bin/javadoc</javadocExecutable>
	</configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
